-- MAXIMUM OVERDRIVE - Absolute Maximum Performance
-- No Limits - Pure Speed

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- OVERDRIVE Configuration
local Config = {
    Multiplier = 5000000,         -- 5 MILLION default
    SpeedMultiplier = 10000,      -- 10K speed
    AutoTrain = false,
    Enabled = false,
    OverdriveMode = true,
    ThreadCount = 25,             -- 25 threads default
    InstantMode = true,           -- No wait times
    NuclearMode = true,           -- Multiply EVERYTHING
    HookActive = false
}

local Stats = {
    TotalGains = 0,
    TrainCount = 0,
    RequestCount = 0,
    ThreadsRunning = 0
}

-- Cached Remotes
local Cache = {}

-- GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MaxOverdrive"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = playerGui

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 500, 0, 700)
MainFrame.Position = UDim2.new(0.5, -250, 0.5, -350)
MainFrame.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true
MainFrame.Parent = ScreenGui

local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 20)
Corner.Parent = MainFrame

local Stroke = Instance.new("UIStroke")
Stroke.Color = Color3.fromRGB(255, 0, 0)
Stroke.Thickness = 5
Stroke.Parent = MainFrame

-- Header
local Header = Instance.new("Frame")
Header.Size = UDim2.new(1, 0, 0, 75)
Header.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Header.BorderSizePixel = 0
Header.Parent = MainFrame

local HCorner = Instance.new("UICorner")
HCorner.CornerRadius = UDim.new(0, 20)
HCorner.Parent = Header

local Gradient = Instance.new("UIGradient")
Gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 100, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))
}
Gradient.Parent = Header

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, -120, 1, 0)
Title.Position = UDim2.new(0, 25, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "🔥 MAXIMUM OVERDRIVE"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 28
Title.Font = Enum.Font.GothamBlack
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = Header

local MinBtn = Instance.new("TextButton")
MinBtn.Size = UDim2.new(0, 45, 0, 45)
MinBtn.Position = UDim2.new(1, -105, 0, 15)
MinBtn.BackgroundColor3 = Color3.fromRGB(255, 200, 0)
MinBtn.Text = "−"
MinBtn.TextSize = 35
MinBtn.Font = Enum.Font.GothamBlack
MinBtn.BorderSizePixel = 0
MinBtn.Parent = Header

local MCorner = Instance.new("UICorner")
MCorner.CornerRadius = UDim.new(0, 12)
MCorner.Parent = MinBtn

local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(0, 45, 0, 45)
CloseBtn.Position = UDim2.new(1, -55, 0, 15)
CloseBtn.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CloseBtn.Text = "✕"
CloseBtn.TextSize = 26
CloseBtn.Font = Enum.Font.GothamBlack
CloseBtn.BorderSizePixel = 0
CloseBtn.Parent = Header

local CCorner = Instance.new("UICorner")
CCorner.CornerRadius = UDim.new(0, 12)
CCorner.Parent = CloseBtn

-- Content
local Content = Instance.new("ScrollingFrame")
Content.Size = UDim2.new(1, -30, 1, -95)
Content.Position = UDim2.new(0, 15, 0, 83)
Content.BackgroundTransparency = 1
Content.BorderSizePixel = 0
Content.ScrollBarThickness = 12
Content.ScrollBarImageColor3 = Color3.fromRGB(255, 0, 0)
Content.CanvasSize = UDim2.new(0, 0, 0, 1000)
Content.Parent = MainFrame

-- Stats Panel
local StatsPanel = Instance.new("Frame")
StatsPanel.Size = UDim2.new(1, 0, 0, 180)
StatsPanel.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
StatsPanel.BorderSizePixel = 0
StatsPanel.Parent = Content

local SCorner = Instance.new("UICorner")
SCorner.CornerRadius = UDim.new(0, 15)
SCorner.Parent = StatsPanel

local SStroke = Instance.new("UIStroke")
SStroke.Color = Color3.fromRGB(255, 50, 50)
SStroke.Thickness = 3
SStroke.Parent = StatsPanel

local StatsTitle = Instance.new("TextLabel")
StatsTitle.Size = UDim2.new(1, -20, 0, 40)
StatsTitle.Position = UDim2.new(0, 10, 0, 5)
StatsTitle.BackgroundTransparency = 1
StatsTitle.Text = "⚡ OVERDRIVE MONITOR"
StatsTitle.TextColor3 = Color3.fromRGB(255, 100, 100)
StatsTitle.TextSize = 20
StatsTitle.Font = Enum.Font.GothamBlack
StatsTitle.TextXAlignment = Enum.TextXAlignment.Left
StatsTitle.Parent = StatsPanel

local StatusLbl = Instance.new("TextLabel")
StatusLbl.Size = UDim2.new(1, -20, 0, 30)
StatusLbl.Position = UDim2.new(0, 10, 0, 48)
StatusLbl.BackgroundTransparency = 1
StatusLbl.Text = "⚪ STANDBY - READY TO DESTROY"
StatusLbl.TextColor3 = Color3.fromRGB(255, 200, 100)
StatusLbl.TextSize = 17
StatusLbl.Font = Enum.Font.GothamBold
StatusLbl.TextXAlignment = Enum.TextXAlignment.Left
StatusLbl.Parent = StatsPanel

local GainLbl = Instance.new("TextLabel")
GainLbl.Size = UDim2.new(1, -20, 0, 28)
GainLbl.Position = UDim2.new(0, 10, 0, 82)
GainLbl.BackgroundTransparency = 1
GainLbl.Text = "💎 TOTAL: +0"
GainLbl.TextColor3 = Color3.fromRGB(255, 255, 150)
GainLbl.TextSize = 16
GainLbl.Font = Enum.Font.GothamBold
GainLbl.TextXAlignment = Enum.TextXAlignment.Left
GainLbl.Parent = StatsPanel

local CountLbl = Instance.new("TextLabel")
CountLbl.Size = UDim2.new(0.5, -10, 0, 24)
CountLbl.Position = UDim2.new(0, 10, 0, 114)
CountLbl.BackgroundTransparency = 1
CountLbl.Text = "🎯 COUNT: 0"
CountLbl.TextColor3 = Color3.fromRGB(200, 200, 255)
CountLbl.TextSize = 14
CountLbl.Font = Enum.Font.Gotham
CountLbl.TextXAlignment = Enum.TextXAlignment.Left
CountLbl.Parent = StatsPanel

local ReqLbl = Instance.new("TextLabel")
ReqLbl.Size = UDim2.new(0.5, -10, 0, 24)
ReqLbl.Position = UDim2.new(0.5, 0, 0, 114)
ReqLbl.BackgroundTransparency = 1
ReqLbl.Text = "📡 REQ: 0"
ReqLbl.TextColor3 = Color3.fromRGB(255, 200, 200)
ReqLbl.TextSize = 14
ReqLbl.Font = Enum.Font.Gotham
ReqLbl.TextXAlignment = Enum.TextXAlignment.Left
ReqLbl.Parent = StatsPanel

local ThreadLbl = Instance.new("TextLabel")
ThreadLbl.Size = UDim2.new(1, -20, 0, 24)
ThreadLbl.Position = UDim2.new(0, 10, 0, 142)
ThreadLbl.BackgroundTransparency = 1
ThreadLbl.Text = "🔥 THREADS: 0/25"
ThreadLbl.TextColor3 = Color3.fromRGB(255, 150, 100)
ThreadLbl.TextSize = 14
ThreadLbl.Font = Enum.Font.Gotham
ThreadLbl.TextXAlignment = Enum.TextXAlignment.Left
ThreadLbl.Parent = StatsPanel

-- Multiplier
local MultPanel = Instance.new("Frame")
MultPanel.Size = UDim2.new(1, 0, 0, 125)
MultPanel.Position = UDim2.new(0, 0, 0, 190)
MultPanel.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
MultPanel.BorderSizePixel = 0
MultPanel.Parent = Content

local MPCorner = Instance.new("UICorner")
MPCorner.CornerRadius = UDim.new(0, 15)
MPCorner.Parent = MultPanel

local MPStroke = Instance.new("UIStroke")
MPStroke.Color = Color3.fromRGB(255, 0, 255)
MPStroke.Thickness = 3
MPStroke.Parent = MultPanel

local MultTitle = Instance.new("TextLabel")
MultTitle.Size = UDim2.new(1, -20, 0, 36)
MultTitle.Position = UDim2.new(0, 10, 0, 5)
MultTitle.BackgroundTransparency = 1
MultTitle.Text = "🔥 GAIN: x5,000,000"
MultTitle.TextColor3 = Color3.fromRGB(255, 0, 255)
MultTitle.TextSize = 20
MultTitle.Font = Enum.Font.GothamBlack
MultTitle.TextXAlignment = Enum.TextXAlignment.Left
MultTitle.Parent = MultPanel

local MultInput = Instance.new("TextBox")
MultInput.Size = UDim2.new(1, -20, 0, 52)
MultInput.Position = UDim2.new(0, 10, 0, 48)
MultInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
MultInput.BorderSizePixel = 0
MultInput.Text = "5000000"
MultInput.PlaceholderText = "Max: 999,999,999"
MultInput.TextColor3 = Color3.fromRGB(255, 255, 0)
MultInput.TextSize = 26
MultInput.Font = Enum.Font.GothamBlack
MultInput.Parent = MultPanel

local MICorner = Instance.new("UICorner")
MICorner.CornerRadius = UDim.new(0, 12)
MICorner.Parent = MultInput

local MIStroke = Instance.new("UIStroke")
MIStroke.Color = Color3.fromRGB(255, 255, 0)
MIStroke.Thickness = 3
MIStroke.Parent = MultInput

-- Speed
local SpeedPanel = Instance.new("Frame")
SpeedPanel.Size = UDim2.new(1, 0, 0, 125)
SpeedPanel.Position = UDim2.new(0, 0, 0, 325)
SpeedPanel.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
SpeedPanel.BorderSizePixel = 0
SpeedPanel.Parent = Content

local SPCorner = Instance.new("UICorner")
SPCorner.CornerRadius = UDim.new(0, 15)
SPCorner.Parent = SpeedPanel

local SPStroke = Instance.new("UIStroke")
SPStroke.Color = Color3.fromRGB(255, 150, 0)
SPStroke.Thickness = 3
SPStroke.Parent = SpeedPanel

local SpeedTitle = Instance.new("TextLabel")
SpeedTitle.Size = UDim2.new(1, -20, 0, 36)
SpeedTitle.Position = UDim2.new(0, 10, 0, 5)
SpeedTitle.BackgroundTransparency = 1
SpeedTitle.Text = "⚡ SPEED: x10,000"
SpeedTitle.TextColor3 = Color3.fromRGB(255, 150, 0)
SpeedTitle.TextSize = 20
SpeedTitle.Font = Enum.Font.GothamBlack
SpeedTitle.TextXAlignment = Enum.TextXAlignment.Left
SpeedTitle.Parent = SpeedPanel

local SpeedInput = Instance.new("TextBox")
SpeedInput.Size = UDim2.new(1, -20, 0, 52)
SpeedInput.Position = UDim2.new(0, 10, 0, 48)
SpeedInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
SpeedInput.BorderSizePixel = 0
SpeedInput.Text = "10000"
SpeedInput.PlaceholderText = "Max: 999,999"
SpeedInput.TextColor3 = Color3.fromRGB(255, 200, 0)
SpeedInput.TextSize = 26
SpeedInput.Font = Enum.Font.GothamBlack
SpeedInput.Parent = SpeedPanel

local SICorner = Instance.new("UICorner")
SICorner.CornerRadius = UDim.new(0, 12)
SICorner.Parent = SpeedInput

local SIStroke = Instance.new("UIStroke")
SIStroke.Color = Color3.fromRGB(255, 150, 0)
SIStroke.Thickness = 3
SIStroke.Parent = SpeedInput

-- Threads
local ThreadPanel = Instance.new("Frame")
ThreadPanel.Size = UDim2.new(1, 0, 0, 105)
ThreadPanel.Position = UDim2.new(0, 0, 0, 460)
ThreadPanel.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
ThreadPanel.BorderSizePixel = 0
ThreadPanel.Parent = Content

local TPCorner = Instance.new("UICorner")
TPCorner.CornerRadius = UDim.new(0, 15)
TPCorner.Parent = ThreadPanel

local TPStroke = Instance.new("UIStroke")
TPStroke.Color = Color3.fromRGB(100, 150, 255)
TPStroke.Thickness = 3
TPStroke.Parent = ThreadPanel

local ThreadTitle = Instance.new("TextLabel")
ThreadTitle.Size = UDim2.new(1, -20, 0, 34)
ThreadTitle.Position = UDim2.new(0, 10, 0, 5)
ThreadTitle.BackgroundTransparency = 1
ThreadTitle.Text = "🔥 THREADS: 25"
ThreadTitle.TextColor3 = Color3.fromRGB(100, 150, 255)
ThreadTitle.TextSize = 19
ThreadTitle.Font = Enum.Font.GothamBlack
ThreadTitle.TextXAlignment = Enum.TextXAlignment.Left
ThreadTitle.Parent = ThreadPanel

local ThreadInput = Instance.new("TextBox")
ThreadInput.Size = UDim2.new(1, -20, 0, 50)
ThreadInput.Position = UDim2.new(0, 10, 0, 45)
ThreadInput.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
ThreadInput.BorderSizePixel = 0
ThreadInput.Text = "25"
ThreadInput.PlaceholderText = "1-100 threads"
ThreadInput.TextColor3 = Color3.fromRGB(100, 200, 255)
ThreadInput.TextSize = 24
ThreadInput.Font = Enum.Font.GothamBlack
ThreadInput.Parent = ThreadPanel

local TICorner = Instance.new("UICorner")
TICorner.CornerRadius = UDim.new(0, 12)
TICorner.Parent = ThreadInput

-- Modes
local ModePanel = Instance.new("Frame")
ModePanel.Size = UDim2.new(1, 0, 0, 150)
ModePanel.Position = UDim2.new(0, 0, 0, 575)
ModePanel.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
ModePanel.BorderSizePixel = 0
ModePanel.Parent = Content

local ModCorner = Instance.new("UICorner")
ModCorner.CornerRadius = UDim.new(0, 15)
ModCorner.Parent = ModePanel

local OverdriveBtn = Instance.new("TextButton")
OverdriveBtn.Size = UDim2.new(1, -20, 0, 40)
OverdriveBtn.Position = UDim2.new(0, 10, 0, 10)
OverdriveBtn.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
OverdriveBtn.Text = "🔥 OVERDRIVE: ON"
OverdriveBtn.TextSize = 16
OverdriveBtn.Font = Enum.Font.GothamBold
OverdriveBtn.BorderSizePixel = 0
OverdriveBtn.Parent = ModePanel

local OBCorner = Instance.new("UICorner")
OBCorner.CornerRadius = UDim.new(0, 10)
OBCorner.Parent = OverdriveBtn

local InstantBtn = Instance.new("TextButton")
InstantBtn.Size = UDim2.new(1, -20, 0, 40)
InstantBtn.Position = UDim2.new(0, 10, 0, 55)
InstantBtn.BackgroundColor3 = Color3.fromRGB(200, 0, 255)
InstantBtn.Text = "⚡ INSTANT: ON"
InstantBtn.TextSize = 16
InstantBtn.Font = Enum.Font.GothamBold
InstantBtn.BorderSizePixel = 0
InstantBtn.Parent = ModePanel

local IBCorner = Instance.new("UICorner")
IBCorner.CornerRadius = UDim.new(0, 10)
IBCorner.Parent = InstantBtn

local NuclearBtn = Instance.new("TextButton")
NuclearBtn.Size = UDim2.new(1, -20, 0, 40)
NuclearBtn.Position = UDim2.new(0, 10, 0, 100)
NuclearBtn.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
NuclearBtn.Text = "☢️ NUCLEAR: ON"
NuclearBtn.TextSize = 16
NuclearBtn.Font = Enum.Font.GothamBold
NuclearBtn.BorderSizePixel = 0
NuclearBtn.Parent = ModePanel

local NBCorner = Instance.new("UICorner")
NBCorner.CornerRadius = UDim.new(0, 10)
NBCorner.Parent = NuclearBtn

-- Main Controls
local ActivateBtn = Instance.new("TextButton")
ActivateBtn.Size = UDim2.new(1, 0, 0, 70)
ActivateBtn.Position = UDim2.new(0, 0, 0, 735)
ActivateBtn.BackgroundColor3 = Color3.fromRGB(255, 0, 100)
ActivateBtn.Text = "🚀 ACTIVATE OVERDRIVE"
ActivateBtn.TextSize = 26
ActivateBtn.Font = Enum.Font.GothamBlack
ActivateBtn.BorderSizePixel = 0
ActivateBtn.Parent = Content

local ActCorner = Instance.new("UICorner")
ActCorner.CornerRadius = UDim.new(0, 16)
ActCorner.Parent = ActivateBtn

local ActStroke = Instance.new("UIStroke")
ActStroke.Color = Color3.fromRGB(255, 150, 150)
ActStroke.Thickness = 6
ActStroke.Parent = ActivateBtn

local AutoBtn = Instance.new("TextButton")
AutoBtn.Size = UDim2.new(1, 0, 0, 60)
AutoBtn.Position = UDim2.new(0, 0, 0, 815)
AutoBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 90)
AutoBtn.Text = "🤖 AUTO TRAIN: OFF"
AutoBtn.TextSize = 20
AutoBtn.Font = Enum.Font.GothamBold
AutoBtn.BorderSizePixel = 0
AutoBtn.Parent = Content

local AutoCorner = Instance.new("UICorner")
AutoCorner.CornerRadius = UDim.new(0, 14)
AutoCorner.Parent = AutoBtn

local MultiBtn = Instance.new("TextButton")
MultiBtn.Size = UDim2.new(1, 0, 0, 55)
MultiBtn.Position = UDim2.new(0, 0, 0, 885)
MultiBtn.BackgroundColor3 = Color3.fromRGB(100, 50, 255)
MultiBtn.Text = "🔥 MULTI-THREAD: OFF"
MultiBtn.TextSize = 18
MultiBtn.Font = Enum.Font.GothamBold
MultiBtn.BorderSizePixel = 0
MultiBtn.Parent = Content

local MuCorner = Instance.new("UICorner")
MuCorner.CornerRadius = UDim.new(0, 14)
MuCorner.Parent = MultiBtn

-- Minimized
local MinFrame = Instance.new("Frame")
MinFrame.Size = UDim2.new(0, 350, 0, 65)
MinFrame.Position = UDim2.new(0.5, -175, 0, 25)
MinFrame.BackgroundColor3 = Color3.fromRGB(5, 5, 10)
MinFrame.BorderSizePixel = 0
MinFrame.Visible = false
MinFrame.Active = true
MinFrame.Draggable = true
MinFrame.Parent = ScreenGui

local MFCorner = Instance.new("UICorner")
MFCorner.CornerRadius = UDim.new(0, 16)
MFCorner.Parent = MinFrame

local MFStroke = Instance.new("UIStroke")
MFStroke.Color = Color3.fromRGB(255, 0, 0)
MFStroke.Thickness = 5
MFStroke.Parent = MinFrame

local MinLabel = Instance.new("TextLabel")
MinLabel.Size = UDim2.new(1, -130, 1, 0)
MinLabel.Position = UDim2.new(0, 20, 0, 0)
MinLabel.BackgroundTransparency = 1
MinLabel.Text = "🔥 OVERDRIVE"
MinLabel.TextColor3 = Color3.fromRGB(255, 255, 150)
MinLabel.TextSize = 22
MinLabel.Font = Enum.Font.GothamBlack
MinLabel.TextXAlignment = Enum.TextXAlignment.Left
MinLabel.Parent = MinFrame

local MinStatus = Instance.new("TextLabel")
MinStatus.Size = UDim2.new(0, 70, 0, 26)
MinStatus.Position = UDim2.new(1, -140, 0, 20)
MinStatus.BackgroundTransparency = 1
MinStatus.Text = "⚪ OFF"
MinStatus.TextColor3 = Color3.fromRGB(255, 100, 100)
MinStatus.TextSize = 16
MinStatus.Font = Enum.Font.GothamBold
MinStatus.Parent = MinFrame

local RestoreBtn = Instance.new("TextButton")
RestoreBtn.Size = UDim2.new(0, 52, 0, 52)
RestoreBtn.Position = UDim2.new(1, -62, 0, 6)
RestoreBtn.BackgroundColor3 = Color3.fromRGB(100, 150, 255)
RestoreBtn.Text = "□"
RestoreBtn.TextSize = 30
RestoreBtn.Font = Enum.Font.GothamBlack
RestoreBtn.BorderSizePixel = 0
RestoreBtn.Parent = MinFrame

local RCorner = Instance.new("UICorner")
RCorner.CornerRadius = UDim.new(0, 14)
RCorner.Parent = RestoreBtn

-- Functions
local function Fmt(n)
    if n >= 1e21 then return string.format("%.2fSx", n / 1e21)
    elseif n >= 1e18 then return string.format("%.2fQu", n / 1e18)
    elseif n >= 1e15 then return string.format("%.2fQd", n / 1e15)
    elseif n >= 1e12 then return string.format("%.2fT", n / 1e12)
    elseif n >= 1e9 then return string.format("%.2fB", n / 1e9)
    elseif n >= 1e6 then return string.format("%.2fM", n / 1e6)
    elseif n >= 1e3 then return string.format("%.2fK", n / 1e3)
    else return tostring(math.floor(n)) end
end

local function Update()
    MultTitle.Text = "🔥 GAIN: x" .. Fmt(Config.Multiplier)
    SpeedTitle.Text = "⚡ SPEED: x" .. Fmt(Config.SpeedMultiplier)
    ThreadTitle.Text = "🔥 THREADS: " .. Config.ThreadCount
    GainLbl.Text = "💎 TOTAL: +" .. Fmt(Stats.TotalGains)
    CountLbl.Text = "🎯 COUNT: " .. Fmt(Stats.TrainCount)
    ReqLbl.Text = "📡 REQ: " .. Fmt(Stats.RequestCount)
    ThreadLbl.Text = string.format("🔥 THREADS: %d/%d", Stats.ThreadsRunning, Config.ThreadCount)
end

-- Cache remotes INSTANTLY
task.spawn(function()
    local TS = ReplicatedStorage:WaitForChild("TrainSystem", 2)
    if TS then
        local R = TS:FindFirstChild("Remote")
        if R then Cache.Speed = R:FindFirstChild("TrainSpeedHasChanged") end
        local B = TS:FindFirstChild("Bindable")
        if B then
            for _, v in pairs(B:GetChildren()) do
                if v:IsA("BindableFunction") then Cache[v.Name] = v end
            end
        end
    end
    
    local TE = ReplicatedStorage:WaitForChild("TrainEquipment", 2)
    if TE then
        local R = TE:FindFirstChild("Remote")
        if R then
            Cache.Stationary = R:FindFirstChild("ApplyStationaryTrain")
            Cache.Mobile = R:FindFirstChild("ApplyMobileTrain")
            Cache.Binding = R:FindFirstChild("ApplyBindingTrainingEffect")
            Cache.Boost = R:FindFirstChild("ApplyBindingTrainingBoostEffect")
        end
    end
    print("✅ Cached", #Cache, "remotes")
end)

-- Inputs
MultInput.FocusLost:Connect(function()
    local v = tonumber(MultInput.Text)
    if v and v >= 1 and v <= 999999999 then
        Config.Multiplier = math.floor(v)
        Update()
    else
        MultInput.Text = tostring(Config.Multiplier)
    end
end)

SpeedInput.FocusLost:Connect(function()
    local v = tonumber(SpeedInput.Text)
    if v and v >= 1 and v <= 999999 then
        Config.SpeedMultiplier = math.floor(v)
        Update()
    else
        SpeedInput.Text = tostring(Config.SpeedMultiplier)
    end
end)

ThreadInput.FocusLost:Connect(function()
    local v = tonumber(ThreadInput.Text)
    if v and v >= 1 and v <= 100 then
        Config.ThreadCount = math.floor(v)
        Update()
    else
        ThreadInput.Text = tostring(Config.ThreadCount)
    end
end)

-- Buttons
MinBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = false
    MinFrame.Visible = true
end)

RestoreBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = true
    MinFrame.Visible = false
end)

CloseBtn.MouseButton1Click:Connect(function()
    Config.Enabled = false
    Config.AutoTrain = false
    ScreenGui:Destroy()
end)

OverdriveBtn.MouseButton1Click:Connect(function()
    Config.OverdriveMode = not Config.OverdriveMode
    if Config.OverdriveMode then
        OverdriveBtn.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        OverdriveBtn.Text = "🔥 OVERDRIVE: ON"
    else
        OverdriveBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
        OverdriveBtn.Text = "🔥 OVERDRIVE: OFF"
    end
end)

InstantBtn.MouseButton1Click:Connect(function()
    Config.InstantMode = not Config.InstantMode
    if Config.InstantMode then
        InstantBtn.BackgroundColor3 = Color3.fromRGB(200, 0, 255)
        InstantBtn.Text = "⚡ INSTANT: ON"
    else
        InstantBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
        InstantBtn.Text = "⚡ INSTANT: OFF"
    end
end)

NuclearBtn.MouseButton1Click:Connect(function()
    Config.NuclearMode = not Config.NuclearMode
    if Config.NuclearMode then
        NuclearBtn.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
        NuclearBtn.Text = "☢️ NUCLEAR: ON"
    else
        NuclearBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
        NuclearBtn.Text = "☢️ NUCLEAR: OFF"
    end
end)

ActivateBtn.MouseButton1Click:Connect(function()
    Config.Enabled = not Config.Enabled
    if Config.Enabled then
        ActivateBtn.BackgroundColor3 = Color3.fromRGB(0, 255, 50)
        ActivateBtn.Text = "✅ OVERDRIVE ACTIVE"
        StatusLbl.Text = "🔥 DESTROYING EVERYTHING!"
        StatusLbl.TextColor3 = Color3.fromRGB(0, 255, 100)
        MinStatus.Text = "🔥 ON"
        MinStatus.TextColor3 = Color3.fromRGB(0, 255, 100)
        ActStroke.Color = Color3.fromRGB(0, 255, 100)
    else
        ActivateBtn.BackgroundColor3 = Color3.fromRGB(255, 0, 100)
        ActivateBtn.Text = "🚀 ACTIVATE OVERDRIVE"
        StatusLbl.Text = "⚪ STANDBY - READY TO DESTROY"
        StatusLbl.TextColor3 = Color3.fromRGB(255, 200, 100)
        MinStatus.Text = "⚪ OFF"
        MinStatus.TextColor3 = Color3.fromRGB(255, 100, 100)
        ActStroke.Color = Color3.fromRGB(255, 150, 150)
    end
end)

AutoBtn.MouseButton1Click:Connect(function()
    Config.AutoTrain = not Config.AutoTrain
    if Config.AutoTrain then
        AutoBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 255)
        AutoBtn.Text = "🤖 AUTO TRAIN: ON"
    else
        AutoBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 90)
        AutoBtn.Text = "🤖 AUTO TRAIN: OFF"
    end
end)

MultiBtn.MouseButton1Click:Connect(function()
    local wasOff = MultiBtn.Text:find("OFF")
    if wasOff then
        MultiBtn.BackgroundColor3 = Color3.fromRGB(100, 50, 255)
        MultiBtn.Text = "🔥 MULTI-THREAD: ON"
    else
        MultiBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
        MultiBtn.Text = "🔥 MULTI-THREAD: OFF"
    end
end)

-- MAXIMUM OVERDRIVE HOOK SYSTEM
local function SetupOverdriveHooks()
    if Config.HookActive then return end
    Config.HookActive = true
    
    -- NUCLEAR __namecall Hook
    local oldNC
    oldNC = hookmetamethod(game, "__namecall", function(self, ...)
        local method = getnamecallmethod()
        local args = {...}
        
        if not Config.Enabled then
            return oldNC(self, ...)
        end
        
        -- OVERDRIVE FireServer
        if method == "FireServer" then
            Stats.RequestCount = Stats.RequestCount + 1
            
            if self.Name == "TrainSpeedHasChanged" then
                if args[1] and tonumber(args[1]) then
                    args[1] = args[1] * Config.SpeedMultiplier * (Config.OverdriveMode and 10 or 1)
                    Stats.TrainCount = Stats.TrainCount + 1
                end
            end
            
            -- NUCLEAR: Multiply ALL numbers
            if Config.NuclearMode then
                for i, arg in ipairs(args) do
                    if typeof(arg) == "number" and arg > 0 and arg < 1e12 then
                        args[i] = arg * Config.Multiplier
                    end
                end
            end
            
            return oldNC(self, unpack(args))
        end
        
        -- OVERDRIVE InvokeServer
        if method == "InvokeServer" then
            Stats.RequestCount = Stats.RequestCount + 1
            
            -- Multiply inputs
            if Config.NuclearMode then
                for i, arg in ipairs(args) do
                    if typeof(arg) == "number" and arg > 0 and arg < 1e12 then
                        args[i] = arg * Config.Multiplier
                    end
                end
            end
            
            local results = {pcall(oldNC, self, unpack(args))}
            local success = table.remove(results, 1)
            
            if success and Config.Enabled then
                -- Multiply ALL returns
                for i, result in ipairs(results) do
                    if typeof(result) == "number" and result > 0 then
                        local mult = Config.Multiplier
                        if Config.OverdriveMode then mult = mult * 2 end
                        if Config.InstantMode then mult = mult * 5 end
                        
                        local gain = result * (mult - 1)
                        Stats.TotalGains = Stats.TotalGains + gain
                        results[i] = result * mult
                    end
                end
            end
            
            return unpack(results)
        end
        
        return oldNC(self, ...)
    end)
    
    print("✅ OVERDRIVE Hooks Active")
end

-- Hook ALL BindableFunctions (INSTANT)
task.spawn(function()
    for _, desc in pairs(ReplicatedStorage:GetDescendants()) do
        if desc:IsA("BindableFunction") then
            pcall(function()
                local oldInv = desc.Invoke
                desc.Invoke = function(self, ...)
                    local results = {oldInv(self, ...)}
                    
                    if Config.Enabled then
                        for i, result in ipairs(results) do
                            if typeof(result) == "number" and result > 0 then
                                local mult = Config.Multiplier
                                if Config.OverdriveMode then mult = mult * 2 end
                                if Config.InstantMode then mult = mult * 5 end
                                results[i] = result * mult
                            end
                        end
                    end
                    
                    return unpack(results)
                end
            end)
        end
    end
end)

-- Monitor ALL RemoteEvents (INSTANT)
task.spawn(function()
    for _, desc in pairs(ReplicatedStorage:GetDescendants()) do
        if desc:IsA("RemoteEvent") then
            pcall(function()
                desc.OnClientEvent:Connect(function(...)
                    if Config.Enabled then
                        local args = {...}
                        for _, arg in ipairs(args) do
                            if typeof(arg) == "number" and arg > 0 and arg < 1e15 then
                                Stats.TotalGains = Stats.TotalGains + (arg * Config.Multiplier)
                            end
                        end
                    end
                end)
            end)
        end
    end
end)

-- OVERDRIVE Training Thread (ZERO DELAY)
local function OverdriveThread()
    while true do
        local waitTime = Config.InstantMode and 0 or 0.001
        if waitTime > 0 then task.wait(waitTime) end
        
        if Config.AutoTrain and Config.Enabled then
            Stats.ThreadsRunning = Stats.ThreadsRunning + 1
            
            pcall(function()
                -- Use cached remotes (INSTANT ACCESS)
                if Cache.Stationary then
                    Cache.Stationary:InvokeServer()
                end
                
                if Cache.Mobile then
                    Cache.Mobile:InvokeServer()
                end
                
                if Config.OverdriveMode then
                    if Cache.Binding then
                        Cache.Binding:InvokeServer("Training_2001", "Emit_2")
                    end
                    
                    if Cache.Boost then
                        Cache.Boost:InvokeServer()
                    end
                end
            end)
            
            task.wait()
            Stats.ThreadsRunning = math.max(0, Stats.ThreadsRunning - 1)
        else
            task.wait(0.1)
        end
    end
end

-- Spawn MASSIVE parallel threads
task.spawn(function()
    while task.wait(0.5) do
        if Config.AutoTrain and Config.Enabled and MultiBtn.Text:find("ON") then
            local activeThreads = Stats.ThreadsRunning
            local targetThreads = Config.ThreadCount
            
            if activeThreads < targetThreads then
                for i = 1, targetThreads do
                    task.spawn(OverdriveThread)
                end
            end
        end
    end
end)

-- NUCLEAR Speed Spam (CONTINUOUS)
task.spawn(function()
    while true do
        task.wait(Config.InstantMode and 0 or 0.0001)
        
        if Config.Enabled and Config.OverdriveMode and Cache.Speed then
            pcall(function()
                local speedVal = 999999999 * Config.SpeedMultiplier
                if Config.InstantMode then speedVal = speedVal * 100 end
                Cache.Speed:FireServer(speedVal)
                Stats.RequestCount = Stats.RequestCount + 1
            end)
        end
    end
end)

-- INSTANT Bindable Spam
task.spawn(function()
    while true do
        task.wait(Config.InstantMode and 0 or 0.001)
        
        if Config.Enabled and Config.NuclearMode then
            pcall(function()
                for name, bindable in pairs(Cache) do
                    if typeof(bindable) == "Instance" and bindable:IsA("BindableFunction") then
                        task.spawn(function()
                            bindable:Invoke()
                        end)
                    end
                end
            end)
        end
    end
end)

-- RunService Heartbeat Hook (MAXIMUM SPEED)
RunService.Heartbeat:Connect(function()
    if Config.Enabled and Config.InstantMode then
        pcall(function()
            if Cache.Stationary then Cache.Stationary:InvokeServer() end
            if Cache.Mobile then Cache.Mobile:InvokeServer() end
        end)
    end
end)

-- RenderStepped Hook (EVEN FASTER)
RunService.RenderStepped:Connect(function()
    if Config.Enabled and Config.InstantMode and Config.OverdriveMode then
        pcall(function()
            if Cache.Speed then
                Cache.Speed:FireServer(999999999 * Config.SpeedMultiplier * 1000)
            end
        end)
    end
end)

-- Stats Monitor
task.spawn(function()
    while task.wait(0.5) do
        if Config.Enabled then
            Update()
        end
    end
end)

-- Smooth effects
task.spawn(function()
    local rot = 0
    while task.wait(0.02) do
        rot = (rot + 3) % 360
        Gradient.Rotation = rot
        
        if Config.Enabled then
            Stroke.Color = Color3.fromRGB(
                math.floor(200 + 55 * math.sin(rot * 0.1)),
                math.floor(55 * math.cos(rot * 0.15)),
                math.floor(55 * math.sin(rot * 0.2))
            )
        end
    end
end)

-- Initialize
SetupOverdriveHooks()
Update()

print("💥 ========================================================")
print("💥 MAXIMUM OVERDRIVE - ABSOLUTE MAXIMUM LOADED!")
print("💥 ========================================================")
print("")
print("🔥 OVERDRIVE SETTINGS:")
print("   • Multiplier: x5,000,000 (Default)")
print("   • Speed: x10,000 (Default)")
print("   • Threads: 25 parallel (Default)")
print("   • ZERO DELAY in Instant Mode")
print("")
print("💎 EXPECTED GAINS (x5,000,000):")
print("   • Arms: 180 BILLION per training")
print("   • Legs: 360 BILLION per training")
print("   • Back: 90 BILLION per training")
print("   • Agility: 180 BILLION per training")
print("")
print("🚀 WITH ALL MODES ON (x5M × 2 × 5 = x50M):")
print("   • Arms: 1.8 TRILLION per training")
print("   • Legs: 3.6 TRILLION per training")
print("   • Combat Power → SEXTILLION+ in seconds!")
print("")
print("⚡ OVERDRIVE FEATURES:")
print("   🔥 OVERDRIVE MODE: 2x multiplier boost")
print("   ⚡ INSTANT MODE: 5x multiplier + zero delay")
print("   ☢️ NUCLEAR MODE: Multiply EVERYTHING")
print("   🔥 Multi-thread: Up to 100 parallel threads")
print("   ⚡ Heartbeat hook: Max speed training")
print("   ⚡ RenderStepped hook: Even faster!")
print("   📡 Continuous speed spam")
print("   💎 Triple hook system")
print("")
print("🎯 ULTIMATE USAGE:")
print("   1. Keep default x5M multiplier (or go higher!)")
print("   2. Enable ALL modes: Overdrive, Instant, Nuclear")
print("   3. Click 'ACTIVATE OVERDRIVE'")
print("   4. Enable 'AUTO TRAIN' + 'MULTI-THREAD'")
print("   5. Watch gains go BEYOND INFINITY!")
print("")
print("💡 PERFORMANCE MODES:")
print("   • OVERDRIVE: 2x all gains")
print("   • INSTANT: 5x gains + no delays = 10x total")
print("   • NUCLEAR: Force multiply everything")
print("   • ALL ON: x5M × 2 × 5 = x50 MILLION PER TRAINING!")
print("")
print("⚠️ THIS IS ABSOLUTE MAXIMUM PERFORMANCE!")
print("⚠️ EXPECT COMBAT POWER IN SEXTILLIONS!")
print("💥 ========================================================")
print("🚀 MAXIMUM OVERDRIVE READY - LET'S DESTROY!")
